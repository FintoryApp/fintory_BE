name: CI/CD Pipeline

on:
  push:
    branches:
      - dev #실제 배포할 땐 main으로

permissions:
  contents: read
  packages: write

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들을 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치하기
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: .env 파일 만들기
        run: |
             echo "${{secrets.ENV_LOCAL_DB}}" > ./.env
             echo "${{secrets.ENV_LOCAL_PROFILES}}" >> ./.env

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: Container Registry 서비스에 로그인
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 컨테이너 이미지 빌드
        run: docker build -t ghcr.io/fintoryapp/fintory-server:latest -t ghcr.io/fintoryapp/fintory-server:${{ github.sha }} .

      - name: 통합 테스트 환경 시작
        run: |
          echo "${{secrets.ENV_DOCKER_PROFILES}}" > ./.env.compose
          echo "${{secrets.ENV_DOCKER_DB}}" >> ./.env.compose
          docker compose up -d

      - name: 컨테이너 헬스체크 대기
        run: |
          timeout 60 bash -c 'until docker compose ps database | grep "healthy\|Up"; do
          echo "데이터베이스 시작 중"
          sleep 3
          done'
          echo "데이터베이스 준비 완료"

      - name: 어플리케이션 헬스체크 대기
        run: |
          timeout 120 bash -c 'until curl -f http://localhost:8080/actuator/health 2>/dev/null; do
          echo "어플리케이션 시작 중"
          sleep 5
          done'
          echo "어플리케이션 준비 완료"

      - name: 컨테이너 헬스체크
        run : |
          curl -f http://localhost:8080/actuator/health 
          echo "헬스체크 통과"

      - name: 테스트 환경 정리
        if: always()
        run: |
          docker compose down
          docker system prune -f

      - name: 컨테이너 이미지 푸시
        if: success()
        run: |
          docker push ghcr.io/fintoryapp/fintory-server:latest
          docker push ghcr.io/fintoryapp/fintory-server:${{ github.sha }}



